// Assignment.cpp : This file contains the 'main' function. Program execution begins and ends there.
#include <iostream>
#include <string>
#include <iomanip>

using namespace std;

struct Column {
	int colIndex = -1;
	int value = -1;
	Column *next = NULL;
};

struct LinkedRow {
	int rowIndex = -1;
	LinkedRow *nextRow = NULL;
	Column *firstCol = NULL;

	LinkedRow(int rIndex, int cIndex, int value);
	~LinkedRow();
	void readColumn(int column, int value);
};

LinkedRow::LinkedRow(int rIndex, int cIndex, int value) { // This is a constructor, the reason it accept row,column and value is -> you only create new row if there are value in that row , so we simplify the work.
	rowIndex = rIndex;
	firstCol = new Column();
	firstCol->colIndex = cIndex;
	firstCol->value = value;
}
LinkedRow::~LinkedRow() {
	Column * current = firstCol;
	Column * nextC = NULL;
	while (current != NULL) {
		nextC = current->next;
		delete current;
		current = nextC;
	}
	delete current;
	delete nextC;
	current = NULL;
	nextC = NULL;
}
void LinkedRow::readColumn(int column, int value) {
	Column *loopNode = this->firstCol;
	while (loopNode != NULL) {
		//check if column already exist
		if (loopNode->colIndex == column) {
			//update new value if exist
			loopNode->value = value;
			break;
		} else {
			//create a new node
			if (loopNode->next == NULL) {
				Column *newColumn = new Column();
				newColumn->colIndex = column;
				newColumn->value = value;
				if (loopNode->colIndex < column) {
					newColumn->next = NULL;
					loopNode->next = newColumn;
				} else {
					newColumn->next = this->firstCol;
					this->firstCol = newColumn;
				}
				break;
			} else {
				if (loopNode->colIndex < column && loopNode->next->colIndex > column) {
					Column *newColumn = new Column();
					newColumn->colIndex = column;
					newColumn->value = value;
					newColumn->next = loopNode->next;
					loopNode->next = newColumn;
					break;
				}
			}
		}
		loopNode = loopNode->next;
	}
}

class UTM {
	int rowSize;
	int columnSize;
public:
	LinkedRow *firstRow = NULL;

	UTM(int rows, int columns);
	~UTM();
	void displayElements(int row, int column, int value);
	void printMatrix();
	UTM * addSM(UTM &other);
	bool isSlotReserved(int row, int column);
	bool isExceedSize(int row, int column);
	bool isSameSize(UTM &other);
};

UTM::UTM(int rows, int columns) {
	rowSize = rows;
	columnSize = columns;
}
UTM::~UTM() {
	LinkedRow * current = firstRow;
	LinkedRow * nextC = NULL;
	while (current != NULL) {
		nextC = current->nextRow;
		delete current;
		current = nextC;
	}
	delete current;
	delete nextC;
	current = NULL;
	nextC = NULL;
}
void UTM::displayElements(int row, int column, int value) {
	if (firstRow == NULL) { //If previously no row (which means this is a newly created matrix), then add row, else find the rows
		LinkedRow *newRow = new LinkedRow(row, column, value);
		this->firstRow = newRow;
	} else {
		LinkedRow *loopRow = this->firstRow;
		while (loopRow != NULL) {
			if (loopRow->rowIndex == row) {
				loopRow->readColumn(column, value);
				break;
			} else {
				if (loopRow->nextRow == NULL) {
					LinkedRow *newRow = new LinkedRow(row, column, value);
					if (loopRow->rowIndex < row) {
						loopRow->nextRow = newRow;
						cout << "aaa" << endl;
					} else {
						newRow->nextRow = this->firstRow;
						this->firstRow = newRow;
					}
					break;
				} else {
					if (loopRow->rowIndex < row && loopRow->nextRow->rowIndex > row) {
						LinkedRow *newRow = new LinkedRow(row, column, value);
						newRow->nextRow = loopRow->nextRow;
						loopRow->nextRow = newRow;
						break;
					}
				}
			}
			loopRow = loopRow->nextRow;
		}
	}
}
//Read Value
void UTM::printMatrix() {
	LinkedRow *loopRow = this->firstRow;
	cout << setw(5); //Clear previous line
	for (int i = 1; i <= this->rowSize; i++) {
		if (loopRow == NULL || loopRow->rowIndex != i) { // This is for rows that have no value
			for (int j = 1; j <= this->columnSize; j++) {
				cout << "0" << setw(5);
			}
		} else { // This is rows that have value
			Column *loopColumn = loopRow->firstCol; //Selecting first column with non-zero value
			for (int j = 1; j <= this->columnSize; j++) { //Start display from first column
				if (loopColumn == NULL || loopColumn->colIndex != j) {//Check column index, if not same means that column does not have value.
					cout << "0" << setw(5);
				} else { //If index is SAM tEhen SHOW value when it, then only select the NEXT node, else it will continue checking
					cout << loopColumn->value << setw(5);
					loopColumn = loopColumn->next;
				}
			}
			loopRow = loopRow->nextRow;
		}
		cout << endl; //Yay, this row is done displaying! Next ROWWW
	}
}

UTM * UTM::addSM(UTM &other) {
	LinkedRow *firstSMRow = this->firstRow;
	LinkedRow *secondSMRow = other.firstRow;
	UTM * addedUTM = new UTM(this->rowSize, this->columnSize);

	while (!(firstSMRow == NULL && secondSMRow == NULL)) { //Loop until both matrix are done
		Column *firstSMCol = NULL, *secondSMCol = NULL;
		int displayedRow = 0; //0 = default, 1 = firstRow, 2 = secondRow, 3 = bothRow

		if (firstSMRow != NULL && secondSMRow != NULL) { //If both matrix still have row, compare their index.
			if (firstSMRow->rowIndex > secondSMRow->rowIndex) { //If second matrix does not have that particular row. (which first matrix have)
				cout << "second:" << secondSMRow->rowIndex << endl;
				secondSMCol = secondSMRow->firstCol; //Assign second matrix's column to add later.
				displayedRow = 2;
			} else if (firstSMRow->rowIndex < secondSMRow->rowIndex) { //If first matrix does not have that particular row. (which second matrix have)
				firstSMCol = firstSMRow->firstCol; //Assign first matrix's column to add later.
				displayedRow = 1;
			} else { // If both matrix have that column assign column to display later
				cout << "second:" << secondSMRow->rowIndex << endl;
				firstSMCol = firstSMRow->firstCol;
				secondSMCol = secondSMRow->firstCol;
				displayedRow = 3;
			}
		} else if (firstSMRow != NULL && secondSMRow == NULL) { //If second matrix have finish adding
			firstSMCol = firstSMRow->firstCol; //Keep on adding first matrix to new matrix
			displayedRow = 1;
		} else if (firstSMRow == NULL && secondSMRow != NULL) { //If first matrix have finish adding
			secondSMCol = secondSMRow->firstCol; //Keep on adding second matrix to new matrix
			displayedRow = 2;
		}

		while (!(firstSMCol == NULL && secondSMCol == NULL)) {
			if (firstSMCol != NULL && secondSMCol == NULL) {
				cout << "SecondSMCol is NULL!" << endl;
				addedUTM->displayElements(firstSMRow->rowIndex, firstSMCol->colIndex, firstSMCol->value);
				firstSMCol = firstSMCol->next;
			} else if (firstSMCol == NULL && secondSMCol != NULL) {
				cout << "FirstSMRow is NULL!" << endl;
				addedUTM->displayElements(secondSMRow->rowIndex, secondSMCol->colIndex, secondSMCol->value);
				secondSMCol = secondSMCol->next;
			} else if (firstSMCol->colIndex < secondSMCol->colIndex) {
				addedUTM->displayElements(firstSMRow->rowIndex, firstSMCol->colIndex, firstSMCol->value);
				firstSMCol = firstSMCol->next;
			} else if (secondSMCol->colIndex < firstSMCol->colIndex) {
				addedUTM->displayElements(secondSMRow->rowIndex, secondSMCol->colIndex, secondSMCol->value);
				secondSMCol = secondSMCol->next;
			} else if (firstSMCol->colIndex == secondSMCol->colIndex) {
				cout << "Same row:" << firstSMRow->rowIndex << "Same Col:" << firstSMCol->colIndex << "Value:" << firstSMCol->value << endl;
				int sum = firstSMCol->value + secondSMCol->value;
				addedUTM->displayElements(firstSMRow->rowIndex, firstSMCol->colIndex, sum);
				firstSMCol = firstSMCol->next;
				secondSMCol = secondSMCol->next;
			} else {
				cout << "Error in adding!" << endl;
				cout << "First SM Row:" << firstSMRow->rowIndex << ",Col:" << firstSMCol->colIndex << ",Value:" << firstSMCol->value << ",Have Next:" << (firstSMCol->next == NULL) << endl;
				cout << "second SM Row:" << secondSMRow->rowIndex << ",Col:" << secondSMCol->colIndex << ",Value:" << secondSMCol->value << ",Have Next:" << (secondSMCol->next == NULL) << endl;
			}
		}

		switch (displayedRow) {
			case 1:
				firstSMRow = firstSMRow->nextRow;
				break;
			case 2:
				secondSMRow = secondSMRow->nextRow;
				break;
			case 3:
				firstSMRow = firstSMRow->nextRow;
				secondSMRow = secondSMRow->nextRow;
				break;
			default:
				cout << "??????" << endl;
				break;
		}
	}

	return addedUTM;
}

bool UTM::isExceedSize(int row, int column) {
	return (row <= 0 || row > this->rowSize || column <= 0 || column > this->columnSize);
}

bool UTM::isSlotReserved(int row, int column) {
	return (column <= (row - 1));
}

bool UTM::isSameSize(UTM &other) {
	return (this->rowSize == other.rowSize && this->columnSize == other.columnSize);
}

int main() {
	UTM * tempUTM;
	UTM firstSM(4, 4);
	UTM secondSM(4, 4);
showMenu:
	string input;
	int selection = 0;
	system("cls");
	cout << "Please select one option from the menu below." << endl;
	cout << "1.Show Matrix" << endl;
	cout << "2.Create First Matrix" << endl;
	cout << "3.Create Second Matrix" << endl;
	cout << "4.Sum Two Matrix" << endl;
	cout << "5.Clear Memory" << endl;
	cout << "6.Exit Program" << endl;
	cin >> selection;

	switch (selection) {
		case 1:
			cout << "Show which matrix? (1 or 2)" << endl;
			cin >> selection;
			cout << endl;
			switch (selection) {
				case 1:
					firstSM.printMatrix();
					break;
				case 2:
					secondSM.printMatrix();
					break;
				default:
					cout << "This matrix does not exist" << endl;
					goto showMenu;
			}
			cout << endl;
			system("pause");
			goto showMenu;
			break;
		case 2:
			int rowSize, columnSize;
			cout << "Please input first matrix size:" << endl;
declareFMSize:
			cout << "Row:";
			cin >> rowSize;
			cout << "Column:";
			cin >> columnSize;
			if (rowSize <= 0 || columnSize <= 0) {
				cout << "The size you had entered is invalid! Please enter a valid size." << endl;
				goto declareFMSize;
			} else if (rowSize != columnSize) {
				cout << "Row size must be same with column size" << endl;
				goto declareFMSize;
			}
			firstSM = UTM(rowSize, columnSize);
			cout << "Please input value for first matrix (Index starting from 1)" << endl;
			while (true) {
				int row, column, value;
				cout << "[Row] -> ";
				cin >> row;
				cout << "[Column] -> ";
				cin >> column;
				cout << "[Value] -> ";
				cin >> value;
				if (firstSM.isExceedSize(row, column)) {
					cout << "Invalid row or column! Please enter value within the matrix size!" << endl;
				} else if (firstSM.isSlotReserved(row, column)) {
					cout << "The row or column stated is not avaiable for Upper Triangular Matrix!" << endl;
				} else if (value == 0) {
					cout << "The value must not be 0 !" << endl;
				} else {
					firstSM.displayElements(row, column, value);
					cout << "Value added..." << endl;
				}
				cout << "Continue input next value? (Y/N)" << endl;
				cin >> input;
				if (!(input != "Y" && input != "y")) {
				} else {
					break;
				}
			}
			goto showMenu;
			break;
		case 3:
			cout << "Please input second matrix size:" << endl;
declareSMSize:
			cout << "Row:";
			cin >> rowSize;
			cout << "Column:";
			cin >> columnSize;
			if (rowSize <= 0 || columnSize <= 0) {
				cout << "The size you had entered is invalid! Please enter a valid size." << endl;
				goto declareSMSize;
			} else if (rowSize != columnSize) {
				cout << "Row size must be same with column size" << endl;
				goto declareSMSize;
			}
			secondSM = UTM(rowSize, columnSize);
			cout << "Please input value for second matrix (Index starting from 1)" << endl;
			while (true) {
				int row, column, value;
				cout << "[Row] -> ";
				cin >> row;
				cout << "[Column] -> ";
				cin >> column;
				cout << "[Value] -> ";
				cin >> value;
				if (secondSM.isExceedSize(row, column)) {
					cout << "Invalid row or column! Please enter value within the matrix size!" << endl;
					continue;
				} else if (secondSM.isSlotReserved(row, column)) {
					cout << "The row or column stated is not avaiable for Upper Triangular Matrix!" << endl;
					continue;
				} else if (value == 0) {
					cout << "The value must not be 0 !" << endl;
				} else {
					secondSM.displayElements(row, column, value);
					cout << "Value added..." << endl;
				}
				cout << "Continue input next value? (Y/N)" << endl;
				cin >> input;
				if (!(input != "Y" && input != "y")) {
				} else {
					break;
				}
			}
			goto showMenu;
			break;
		case 4:
			if (firstSM.isSameSize(secondSM)) {
				UTM * sumSM = firstSM.addSM(secondSM);
				sumSM->printMatrix();
				system("pause");
				delete sumSM;
				sumSM = NULL;
				goto showMenu;
			} else {
				cout << "Both the matrix should be in same dimension!" << endl;
				goto showMenu;
			}
			break;
		case 5:
			firstSM.~UTM();
			secondSM.~UTM();
			cout << "Memory Cleared" << endl;
			system("pause");
			firstSM = UTM(4, 4);
			secondSM = UTM(4, 4);
			goto showMenu;
			break;
		case 6:
			cout << "Exiting Program..." << endl;
			system("exit");
			break;
		default:
			goto showMenu;
			break;
	}
	return 0;
}

https://cryptii.com/ 
64
